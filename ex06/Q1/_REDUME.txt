この演習では、継承、動的ポリモーフィズム、仮想関数、
および抽象基本クラスを使用して練習します。
まず、インターフェイスShape2Dを定義する必要があります。
次に、Shape2Dを実装する2つのクラスRectangleとCircleを定義する必要があります。

インターフェイス（または抽象基本クラス）Shape2Dを検討してください。
このインターフェイスは、次のメソッドをエクスポートします。



string get_name（）const：プリミティブの名前に対応する文字列を返します
（例：円、長方形、...）
float compute_area（）const：形状の面積を返します
void translate（float tx、float ty）：形状をx方向にtx、y方向にtyだけ変換します



Shape2Dはインターフェイス（または抽象基本クラス）であるため、
そのメソッドはすべて純粋仮想です。
Shape2D.hという名前のファイルでこのインターフェイスを定義します。

次のステップは、RectangleとCircleのクラスを実装することです。
これらのクラスは、Shape2Dインターフェースを実装します。



Rectangleのコンストラクターは次のとおりです。
長方形の左端の角、幅と高さを指定するRectangle（left_corner、width、height）



Circleのコンストラクターは次のとおりです。
円の中心と半径を指定するCircle（center、radius）



上記のすべての数量は、float型（またはベクトルの場合はfloatの配列）です。

「Rectangle.h」、「Rectangle.cpp」、「Circle.h」、および「Circle.cpp」
というファイルを作成してください。ヘッダーファイルにはクラス定義が含まれます。
メソッドとコンストラクター（およびデストラクター）のコードは、
.cppファイルに入れてください。

コードをテストするには、ファイル「test_Shape2D.cpp」に次のコードを入力
（および使用）してください
